import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,a as l,b as t,e as a,f as n,o as c}from"./app-CySHXAx9.js";const r={};function p(s,e){return c(),o("div",null,[e[0]||(e[0]=l("blockquote",null,[l("p",null,[l("strong",null,"背景回顾"),t("：我们已经在系统调用的基础上实现了 Shell；你应该有一种 “能实现整个应用世界” 的感觉。为了让这个世界更丰富多彩，为开发者提供便利就是至关重要的。UNIX 世界的蓬勃发展离不开 C 语言和它的标准库，长久以来都为 Systems Programming 树立了一套标杆。")])],-1)),e[1]||(e[1]=l("p",null,[l("strong",null,"本讲内容"),t("：系统调用之上的世界：C 标准库和实现。")],-1)),a(" more -"),e[2]||(e[2]=n('<h2 id="libc-简介" tabindex="-1"><a class="header-anchor" href="#libc-简介"><span><code>libc</code> 简介</span></a></h2><h3 id="关于-pipe-的补充" tabindex="-1"><a class="header-anchor" href="#关于-pipe-的补充"><span>关于 <em>pipe</em> 的补充</span></a></h3><p>如果读端关闭，会收到 <em>SIGPIPE</em> 信号</p><ul><li>如果读端提前关闭，就会产生 <em>Broken Pipe</em> 现象 <ul><li>例如 <code>ls | head -n 1</code></li><li><code>ls</code> 的数据很多，但是 <code>head</code> 只接收一条数据就关闭读入端了</li></ul></li></ul><h3 id="c-语言的优点" tabindex="-1"><a class="header-anchor" href="#c-语言的优点"><span>C 语言的优点</span></a></h3><p>计算机是层层包装后的产物：(自里向外排序)</p><ul><li>hardware</li><li>OS kernel (Virtualize)</li><li>Shell、<code>libc</code> (<code>syscall</code>)</li><li>Applications</li><li>Human Users</li></ul><p>我们可以说，<em>syscall</em> 是地基，C 语言 (libc) 是框架 —— 它只是系统调用的一层 <strong>浅封装</strong>。</p><p>因此，C 语言编程的优点是显而易见的：</p><ul><li>容易移植</li><li>稳定性好 <ul><li>是 ISO IEC 标准的一部分</li><li>不用担心升级以后原先可以用的包没了的情况 <ul><li>点名批评 js, python!</li></ul></li></ul></li><li>...</li></ul><h3 id="如何实现一个-libc" tabindex="-1"><a class="header-anchor" href="#如何实现一个-libc"><span>如何实现一个 <code>libc</code> ?</span></a></h3><blockquote><p>我们可以实现任何东西 —— 计算机世界里面没有魔法。</p><p>那么我们在理解 <code>syscall</code> 的基础上，能不能实现 <code>libc</code> 呢？</p></blockquote><ul><li>先学习借鉴一下已有的 <code>libc</code> 实现吧 <ul><li>课上推荐了 <a href="https://musl.libc.org/" target="_blank" rel="noopener noreferrer">musl</a></li></ul></li></ul><p>我们可以链接 musl 的 <code>libc</code> 实现来调试一个 C 程序。在调试的过程中，兴许你可以了解</p><ul><li>一个程序及其参数如何被 OS 加载上来</li><li><code>libc</code> 如何一步一步地启动 <code>main</code> 函数</li><li>在程序响应退出之前，如何执行已注册的钩子函数与其余必要的函数</li><li>...</li></ul>',15))])}const h=i(r,[["render",p],["__file","libc-and-its-implementation.html.vue"]]),u=JSON.parse('{"path":"/zh/note/os/Virtualization/libc-and-its-implementation.html","title":"C 标准库及其实现","lang":"zh-CN","frontmatter":{"title":"C 标准库及其实现","order":17,"icon":"C","categories":["操作系统"],"tags":["系统调用","UNIX","Shell"],"description":"背景回顾：我们已经在系统调用的基础上实现了 Shell；你应该有一种 “能实现整个应用世界” 的感觉。为了让这个世界更丰富多彩，为开发者提供便利就是至关重要的。UNIX 世界的蓬勃发展离不开 C 语言和它的标准库，长久以来都为 Systems Programming 树立了一套标杆。 本讲内容：系统调用之上的世界：C 标准库和实现。 libc 简介 关...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/zh/note/os/Virtualization/libc-and-its-implementation.html"}],["meta",{"property":"og:site_name","content":"文档演示"}],["meta",{"property":"og:title","content":"C 标准库及其实现"}],["meta",{"property":"og:description","content":"背景回顾：我们已经在系统调用的基础上实现了 Shell；你应该有一种 “能实现整个应用世界” 的感觉。为了让这个世界更丰富多彩，为开发者提供便利就是至关重要的。UNIX 世界的蓬勃发展离不开 C 语言和它的标准库，长久以来都为 Systems Programming 树立了一套标杆。 本讲内容：系统调用之上的世界：C 标准库和实现。 libc 简介 关..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-15T12:35:11.000Z"}],["meta",{"property":"article:tag","content":"系统调用"}],["meta",{"property":"article:tag","content":"UNIX"}],["meta",{"property":"article:tag","content":"Shell"}],["meta",{"property":"article:modified_time","content":"2025-02-15T12:35:11.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C 标准库及其实现\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-15T12:35:11.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"codePJCP2\\",\\"url\\":\\"https://docs.pjcp2-personal.cn/zh/\\"}]}"]]},"headers":[{"level":2,"title":"libc 简介","slug":"libc-简介","link":"#libc-简介","children":[{"level":3,"title":"关于 pipe 的补充","slug":"关于-pipe-的补充","link":"#关于-pipe-的补充","children":[]},{"level":3,"title":"C 语言的优点","slug":"c-语言的优点","link":"#c-语言的优点","children":[]},{"level":3,"title":"如何实现一个 libc ?","slug":"如何实现一个-libc","link":"#如何实现一个-libc","children":[]}]}],"git":{"createdTime":1739622911000,"updatedTime":1739622911000,"contributors":[{"name":"codePJCP2","email":"159783914+codePJCP2@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.66,"words":497},"filePathRelative":"zh/note/os/Virtualization/libc-and-its-implementation.md","localizedDate":"2025年2月15日","autoDesc":true}');export{h as comp,u as data};
